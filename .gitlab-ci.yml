image: node:16

cache:
  paths:
    - node_modules/
    - .yarn

before_script:  
    - apt-get update -qq
    - apt-get install -qq

stages:
  - build
  - deployment

Build:
  stage: build
  tags:
    - node,aws,shell
  before_script: 
    - yarn config set cache-folder .yarn
    - yarn install 
  script:
    - npm run build

Deployment:
  stage: deployment
  tags:
    - node,aws,shell
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    ## Run ssh-agent (inside the build environment)
    - eval $(ssh-agent -s)
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work
    ## without extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    ##
    ## Create the SSH directory and give it the right permissions
    ##
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $DEPLOY_SERVER_URL >> ~/.ssh/known_hosts
    - chmod 644  ~/.ssh/known_hosts
  # Generates to connect to the AWS unit the SSH key.
    - mkdir -p ~/.ssh
    - echo -e "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    # Sets the permission to 600 to prevent a problem with AWS
  # that it's too unprotected.
    - chmod 600  ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'   
  script:     
    - bash ./scripts/shell/connect.sh
  environment:     
    name: production